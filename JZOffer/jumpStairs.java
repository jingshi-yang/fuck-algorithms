package JZOffer;

/*

剑指 Offer 10- II. 青蛙跳台阶问题

一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。

答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

示例 1：
输入：n = 2
输出：2

示例 2：
输入：n = 7
输出：21

示例 3：
输入：n = 0
输出：1

提示：
0 <= n <= 100

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/qing-wa-tiao-tai-jie-wen-ti-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

*/
public class jumpStairs {
    // 分析题目可以发现，n=1时有1种跳法即直接跳上去，n=2时有2种跳法即一次跳两级或跳两次一级
    // 继续递推，n=3时的跳法可以分解为n=2和n=1的组合或是n=1和n=2的组合
    // n=4时可以分解为n=3和n=1的组合或是n=2和n=2的组合
    // 同理n=5时可以分解为n=4和n=1的组合或是n=3和n=2的组合
    // 不管n为多少，结果都可以分解成最后一步跳一级或两级
    // 因此结果等于n-1时的结果加上n-2时的结果
    // 所以这特么就是个换皮斐波那契数列
    // 只要注意一下在这个题目中f(0) = 1就好了
    public int numWays(int n) {
        if (n < 2) return 1;
        int p = 1, q = 1, ans = 1;
        for (int i = 2; i<=n; i++){
            p = q;
            q = ans;
            ans = (p + q)%1000000007;
        }
        return ans;
    }
    // 参考: 剑指 Offer 10- I. 斐波那契数列
    // 道理我都懂，但是为什么0级的台阶还要有1种跳法，这青蛙在原地托马斯回环吗
}
